<?php

/**
 * @file
 * A basic Drupal 8 Hello World Module.
 */

/**
 * Implements hook_permission().
 */
 
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Url;
use \Drupal\velo\Controller\VeloController;
use Drupal\Component\Render\MarkupInterface;
use Drupal\Component\Utility\Html;
use Drupal\Component\Utility\Xss;
use \Drupal\Core\Render\Markup ;
use Drupal\profile\Entity\Profile;


/*function parfum_permission() {
  $permissions = array(
    'view parfum' => array(
      'title' => t('View Parfum module'),
      'description' => t('View the Parfum module page.'),
    ),
  );
  return $permissions;
}
*/

/**
 * Implements hook_theme().
 */
/*function parfum_theme() {
  return array(
    'parfum_primary_page' => array(
      'template' => 'parfum_primary_page',
      'variables' => array(
        'items' => array(),
      ),
    ),
  );
}*/


/*function parfum_mail_alter(&$message){

	if (isset($message['id']) && $message['id'] == 'commerce_order_receipt') {
		 $message['send'] = FALSE;
		$source = 'contact@parfumstreet.fr';
		$copie =  'contact@parfumstreet.fr';
		
		$texte_html= '<p>Madame/Monsieur,</p><p>Nous vous confirmons que votre commande a bien &eacute;t&eacute; enregistr&eacute;e et elle est en cours de traitement.</p><p>Toute l\'&eacute;quipe <span style="color: #a30207;"><strong>ParfumStreet</strong></span> vous remercie et reste disponible pour toute demande ou question</p><p><em>Bien Cordialement,</em><br /><em>I. Barbouch</em><br /></p>';
		
		$order = $message['params']['order'];
		$destination = $order->getEmail();
			
		$pdf_order = array();
		$pdf_order ['uid']= $order->getOrderNumber();
		$pdf_order ['id']= date('Ymd').'-'.$pdf_order ['uid'];
		$pdf_order ['file_name'] = $pdf_order ['id'].'.pdf';
		$pdf_order ['order_time']= date('d-m-Y');
		$pdf_order ['nature']= 'Commande Client';
		$pdf_order ['subdirectory']= 'commande';
		
		$titre_mail = 'Confirmation de Commande ParfumStreet '.$pdf_order ['id'];

		$shipments = $order->get("shipments")->getValue()[0]['target_id'];
		$shipments = \Drupal\commerce_shipping\Entity\Shipment::load($shipments);
		$address = $shipments->getShippingProfile()->get('address')->getValue();		
		$address = $address[0];
		
		//dpm ($shipments->get('field_telephone')->getValue());
		
		$telephone = $shipments->get('field_telephone')->getValue();
		$telephone = $telephone[0]['value'];
		
		
		//dpm($address);
			
		$cedex= !empty($address["sorting_code"])?" Cedex ".$address["sorting_code"]:"";
		$Name = isset($address["family_name"])?$address["family_name"]:"";
		$SecondName = isset($address["given_name"])?$address["given_name"]:"";
		$Street1 = isset($address["address_line1"])?$address["address_line1"]:"";
		$Street2 = isset($address["address_line2"])?$address["address_line2"]:"";
		$City = isset($address["locality"])?$address["locality"]:"";
		$PostalCode = isset($address["postal_code"])?$address["postal_code"].' '.$City.' '.$cedex:"";
		
		$pdf_order ['adresse_client'] = array ($Street1, $Street2, $PostalCode);
		$pdf_order ['nom_client']= $SecondName.' '.$Name;
		$pdf_order ['telephone']= $telephone;
		$pdf_order ['message']= "Nous procèderons à l'envoi du colis dès la réception de votre virement sur notre compte. Vous pouvez consulter nos conditions générales de vente sur cette adresse http://parfumstreet.fr/cgv Pour toute demande ou réclamation, nous sommes à votre disposition au 06 17 87 76 80 ou par e-mail contact@parfumstreet.fr";
			
		//Copier le shipping profile dans le billing profile pour éviter une double saisie.
		$profile = Profile::create([
			'type' => 'customer',
			'address' => [
			'country_code' => 'FR',
				'sorting_code' => !empty($address["sorting_code"])?" Cedex ".$address["sorting_code"]:"",
				'family_name' => isset($address["family_name"])?$address["family_name"]:"",
				'given_name' => isset($address["given_name"])?$address["given_name"]:"",
				'address_line1' => isset($address["address_line1"])?$address["address_line1"]:"",
				'address_line2' => isset($address["address_line2"])?$address["address_line2"]:"",
				'locality' =>  isset($address["locality"])?$address["locality"]:"",
				'postal_code' => isset($address["postal_code"])?$address["postal_code"]:"",
			],
		]);
		$profile->save();
		$order = \Drupal\commerce_order\Entity\Order::load($order->getOrderNumber());
		$order->setBillingProfile($profile);
		$order->save();
		$order_items = $order->getItems();
		$pdf_order ['Sous Total H.T'] = number_format ( $order->getSubtotalPrice()->getNumber(), 2 );
		$Adjustments = $order->getAdjustments();
		foreach ($Adjustments as $key_adj => $value_adj){
			if ( $value_adj->getType() =='shipping'){
				$pdf_order ['Frais de Port H.T'] = number_format ( $value_adj->getAmount()->getNumber(), 2 );
			}
		}
			
		$pdf_order ['TOTAL H.T'] = number_format ( $order->getTotalPrice()->getNumber(), 2 );
		
		$lines = array();
		//Récupérer la liste des articles
		foreach ($order_items as $key => $value){
			$variation = $value->getPurchasedEntity();
			$quantity  =  number_format ( $value->getQuantity(), 0 );					
			$unit_price = number_format ( $variation->getPrice()->getNumber(), 2 );
			$my_title = $variation->getTitle();
			$sku = $variation->getSku();
			$total_item_price = $value->getTotalPrice();
			$total_item_price = preg_replace('/ EUR/', '', $total_item_price);
			$total_item_price = number_format ( $total_item_price, 2 );
			$lines [] = $sku.'|'.$my_title.'|'.$unit_price.'|'.$quantity.'|'.$total_item_price;
		}
		$pdf_order['lines'] = $lines;
		$parfum_controller = new ParfumController ;
		$parfum_controller->_generation_pdf($pdf_order);
		_notification_mail ($source, $copie, $destination, $titre_mail, $texte_html,'sites/default/files/private/commande/',$pdf_order ['file_name'])	;
		
		
		$pdf_order ['nature']= 'Facture Client';
		$pdf_order ['subdirectory']= 'facture';				
		$pdf_order ['message']= "Nous confirmons réception de votre paiement et nous souhaitons vous informer que le colis partira depuis nos locaux dans un jour ouvrable, nous vous communiquerons d\'ici un jour ouvrable le code de suivi de votre colis. Vous pouvez consulter nos conditions générales de vente sur cette adresse http://parfumstreet.fr/cgv Pour toute demande ou réclamation, nous sommes à votre disposition au 06 17 87 76 80 ou par e-mail contact@parfumstreet.fr";	
		$parfum_controller->_generation_pdf($pdf_order);

		
		$pdf_order ['nature']= 'Bon de Livraison';
		$pdf_order ['subdirectory']= 'livraison';		
		$pdf_order ['message']= "Nous souhaitons vous informer que votre colis a quitté nos locaux et que vous pouvez le suivre sous cette référence.";
		$parfum_controller->_generation_pdf($pdf_order);
		
		
		
		

		//dpm ($pdf_order);
		//dpm ($ShippingProfile);
		//\Drupal::logger('parfum')->notice('Message is being sent to customer5');		
	}
		
  

}*/

/*function velo_commerce_order_presave($order){
	$order_number = $order->getOrderNumber();
	if (isset ($order_number)){
		$order_items = $order->getItems();			
		$total_engel = $order->get('field_prix_total_engel')->getValue();
		if (!isset($total_engel[0]["number"])){
			$total_engel = 0;
			foreach ($order_items as $key => $value){
				$variation = $value->getPurchasedEntity();
				$purchased_quantity  = $value->getQuantity();	
				$prix_engel = $variation->get('field_prix_engel')->getValue()[0]["number"];
				$total_engel += $prix_engel * $purchased_quantity;					
			}

			$order->set("field_prix_total_engel", new \Drupal\commerce_price\Price(strval ($total_engel), 'EUR'));			
		}

		$stat_commande = $order->get('field_statut_commande_engel')->getValue();
		if (isset($order->original)){
			$stat_commande_original = $order->original->get('field_statut_commande_engel')->getValue();
		}
		else{
			$stat_commande_original = 0;
		}
		
		
		
		\Drupal::logger('parfum')->notice('Le statut de la commande est:'.$stat_commande[0]["value"].'|'.$stat_commande_original[0]["value"]);	
		//ob_start();
		//var_dump($url);
		//$dumpy = ob_get_clean();
		//\Drupal::logger('parfum')->notice('Strucutre_fichier:'.$dumpy);

		$source = 'contact@parfumstreet.fr';
		$destination = $order->getEmail();
		
		if ($stat_commande_original[0]["value"]==1 and $stat_commande[0]["value"] == 2){
			if (isset ($order->get('field_facture')->entity)){
				$uri = $order->get('field_facture')->entity->getFileUri();
				$filename = preg_split("/\/\//", $uri);
				$filename = $filename[1];			
			}
			else{
				$filename="";
			}

		
			\Drupal::logger('parfum')->notice('Strucutre_fichier:'.$filename);
			

			\Drupal::logger('parfum')->notice('The order is already placed');
			 $parfum_controller = new ParfumController ;
			 $address = $order->getBillingProfile()->get('address')->getValue();
				 
			//Récupérer le téléphone
			$shipments = $order->get("shipments")->getValue()[0]['target_id'];
			$shipments = \Drupal\commerce_shipping\Entity\Shipment::load($shipments);
			$address = $shipments->getShippingProfile()->get('address')->getValue();		
			$telephone = $shipments->get('field_telephone')->getValue();
			$telephone = $telephone[0]['value'];
			
			
						 
			 
			 //Temporary deactivated -- Envoi de la commande Engel.
			 $parfum_controller->send_engel_order($order_number, $order_items,$address[0],$telephone);

			 
			$texte_html= '<p>Madame/Monsieur,</p>
			<p>Nous vous confirmons la r&eacute;ception de votre paiement et nous souhaitons vous informer que le colis partira dans un jour ouvrable, nous vous communiquerons dans un prochain mail le code de suivi de votre colis.</p>
			<p>Toute l\'&eacute;quipe <span style="color: #a30207;"><strong>ParfumStreet</strong></span> vous remercie et reste disponible pour toute demande ou question</p>
			<p><em>Bien Cordialement,</em><br /><em>I. Barbouch</em><br /></p>';


			$titre_mail = 'Notification de la facture';
			_notification_mail ($source, null, $destination, $titre_mail, $texte_html,'sites/default/files/private/',$filename)	;
		}
		elseif ($stat_commande_original[0]["value"]==2 and $stat_commande[0]["value"] == 3){
			if (isset ($order->get('field_livraison')->entity)){
				$uri = $order->get('field_livraison')->entity->getFileUri();
				$filename = preg_split("/\/\//", $uri);
				$filename = $filename[1];			
			}
			else{
				$filename="";
			}

			$parfum_controller = new ParfumController ;
			$TrackingURL = $parfum_controller->get_order_status($order->getOrderNumber(),$order->getCreatedTime());
			

			$texte_html= '<p>Madame/Monsieur,</p>
			<p>Nous souhaitons vous informer que votre colis est parti aujourd\'hui et que vous pouvez le suivre via ce <a href="'.$TrackingURL.'">ce lien</a>.</p>
			<p>Toute l\'&eacute;quipe <span style="color: #a30207;"><strong>ParfumStreet</strong></span> vous remercie et reste disponible pour toute demande ou question</p>
			<p><em>Bien Cordialement,</em><br /><em>I. Barbouch</em><br /></p>';
			$titre_mail = 'Notification de la livraison';
			\Drupal::logger('parfum')->notice('texte html:'.$texte_html);
			_notification_mail ($source, null, $destination, $titre_mail, $texte_html,'sites/default/files/private/',$filename)	;
		}
		else{
			\Drupal::logger('parfum')->notice('Aucun mail envoyé:'.$stat_commande_original[0]["value"].'|'. $stat_commande[0]["value"]);
		}
		
	}

	
	
}

/**
 * Preprocess variables for the primary hello world page.
 *
 * @param array $variables
 *  An associative array containing:
 *  - items: Array of participant names.
 */
/*function template_preprocess_parfum_primary_page(&$variables) {
  if (isset($variables['items'])) {
    $results = db_query('SELECT * from parfum limit ' . $variables['items']);
  }
  else {
    $results = db_query('SELECT * from parfum');
  }
  $variables['results'] = $results;
  $variables['test_var'] = 'We can set as many variables in the preprocess 
  function as we like, this variable called test_var simply passes this text 
  itself to the theme template';

}*/


function velo_form_alter(&$form, FormStateInterface &$form_state, $form_id) {
  // Alter login form and add own custom submit handler.
  //\Drupal::logger('velo')->notice('The form id is:'.$form_id);	
  $matches = array();
  //commerce-order-item-add-to-cart-form-commerce-product
  preg_match('/(commerce_order_item_add_to_cart_form_commerce_product_)|(views_form_commerce_cart_form_default)|(commerce_checkout_flow_multistep_default)/' , $form_id, $matches);
  if (in_array('commerce_order_item_add_to_cart_form_commerce_product_',$matches)) {
	  
			//ob_start();
			////var_dump(array_keys ($form['quantity']));
			//var_dump($form['quantity']);
			//$dumpy = ob_get_clean();
			//\Drupal::logger('parfum')->notice('Mon Formulaire:'.$dumpy);	
			
	$form['actions']['submit']['#submit'][] = '_parfum_redirect_to_catalog_submit';
	$session = \Drupal::request()->getSession();    
    if (empty($session->get('my_http_referer')) and isset ($_SERVER ["HTTP_REFERER"])) {
      $session->set('my_http_referer', $_SERVER ["HTTP_REFERER"]);
	  \Drupal::logger('parfum')->notice('Referrer is set to:'.$_SERVER ["HTTP_REFERER"]);
    }
	else{
		$exist = $session->get('my_http_referer');
		\Drupal::logger('parfum')->notice('Referrer already exist:'.$exist);	
	}
  }
  elseif (in_array('views_form_commerce_cart_form_default',$matches)) {
		$options = ['attributes' => ['target' => '_blank']]; 
		$internal_link_2381 = Drupal\Core\Link::createFromRoute(t(" Conditions Générales de Vente"), 'entity.node.canonical', ['node' => 2381],$options);
		$internal_link_2382 = Drupal\Core\Link::createFromRoute(t(" d'Utilisation"), 'entity.node.canonical', ['node' => 2382],$options);;
	  
		$form['terms'] = array(
			'#type' => 'checkbox',
			'#title' => t("J'accepte les").$internal_link_2381->toString().t(" et ").$internal_link_2382->toString(),
			'#required' => TRUE,
		);  
	  $form['#validate'][] = '_parfum_last_check';
  }
  //elseif (in_array('commerce_checkout_flow_multistep_default',$matches)) {
	//		$tmp = 0;		  
	//		ob_start();
	//		var_dump($form["payment_information"]["billing_information"]);
	//		$dumpy = ob_get_clean();
	//		\Drupal::logger('velo')->notice('Structure formulaire commande:'.$dumpy);			
  //}
}
function _parfum_last_check(array &$form, FormStateInterface $form_state) {

	$getUserInput = $form_state->getUserInput();
	/*if ($getUserInput['op']=='Checkout'){
		$view = reset($form_state->getBuildInfo()['args']);
		if (!empty($view->argument['order_id']->value[0])){
			$order = \Drupal\commerce_order\Entity\Order::load($view->argument['order_id']->value[0]);
			$total_ht = $order->getSubtotalPrice()->getNumber();
			$order_items = $order->getItems();
			$lines = array();
			$product_list = array();			
			foreach ($order_items as $key => $value){
				$variation = $value->getPurchasedEntity();
				$quantity  =  number_format ( $value->getQuantity(), 0 );					
				$unit_price = number_format ( $variation->getPrice()->getNumber(), 2 );
				$my_title = $variation->getTitle();
				$sku = $variation->getSku();
				$total_item_price = $value->getTotalPrice();
				$total_item_price = preg_replace('/ EUR/', '', $total_item_price);
				$total_item_price = number_format ( $total_item_price, 2 );
				$engel_id = $variation->get('field_engelid')->getValue()[0]["value"];
				$lines [] = $sku.'|'.$my_title.'|'.$unit_price.'|'.$quantity.'|'.$total_item_price.'|'.$engel_id;
				$product_list [$engel_id] = array ('title' => $my_title, 'qte' => $quantity);
				
			}
			$parfum_controller = new ParfumController ;					//////////////////////////////////////////////////
			$to_be_removed_articles = $parfum_controller->_detect_changed_stock($product_list);
			$to_be_removed_articles = $to_be_removed_articles ['Stock'];
			
			//$stock_status = $parfum_controller->_get_stock_status();
            //
			//$i = 0;
			//$product_engel_indexes = array_keys ($product_list);
			//$to_be_removed_articles = array();
			//$seuil_limite = 5;
			//while ($i < count ($stock_status) and count ($product_engel_indexes)>0){
			//	$key = array_search($stock_status[$i]['Id'], $product_engel_indexes); 
			//	
			//	if (is_numeric($key) ){					
			//		if ($stock_status[$i]['Stock'] < $product_list [$product_engel_indexes[$key]]['qte']+$seuil_limite){
			//			$to_be_removed_articles [$product_engel_indexes[$key]] = $stock_status[$i]['Stock'] - $seuil_limite;
			//		}
			//		unset ($product_engel_indexes[$key]);
			//	}
			//	$i++;
			//}
			/////////////////////////////////
			$no_selected_element = array ();			
			foreach ($to_be_removed_articles as $key => $value){
				if ($value <=0){
					$message_header = 'Il ne reste aucun ';
				}
				else{
					$message_header = 'Il ne reste que '.$value;
				}
				$form_state->setError($no_selected_element, $message_header. ' élément(s) de l\'article '.$product_list[$key]['title'].'. Veuillez réduire la quantité et cliquer sur mettre à jour le panier, puis Checkout.');
			}
			$max_value = 200;
			if ($total_ht > $max_value){
				$form_state->setError($no_selected_element, 'Pour des contraintes de sécurité, la valeur totale du panier ne doit pas dépasser €'.$max_value.'.00. Veuillez revoir le panier puis cliquer sur mettre à jour le panier, puis Checkout ');
			}
			
		}		
	}*/
}
//function velo_preprocess_input(&$variables) {
//	$matches = array();
//	if (isset($variables['attributes']['data-drupal-selector'])){
//		preg_match('/(edit-payment-information-add-payment-method-billing-information-address-0-|edit-payment-information-billing-information-address-0-)(address-given-name|address-family-name|address-given-name|address-family-name|address-address-line1|address-postal-code|address-locality)/' ,     $variables['attributes']['data-drupal-selector'], $matches);
//	}
//	
//	if (count($matches)>0) {
//		if (in_array('address-postal-code', $matches)){
//			$variables['attributes']['value']="00000";
//		}
//		else{
//			$variables['attributes']['value']="Identique à livraison.";
//		}
//	}
//}


/**
 * Custom submit handler for login form.
 */
function _parfum_redirect_to_catalog_submit($form, FormStateInterface $form_state) {
	$session = \Drupal::request()->getSession();    
	/*$HTTP_REFERER = $session->get('my_http_referer');
	if (!empty ($HTTP_REFERER)){
		$url_parts = preg_split("/\//", $HTTP_REFERER);
		$form_state->setRedirectUrl(Url::fromUri('internal:/'.end($url_parts)));
			//ob_start();
			//var_dump($url_parts);
			//$dumpy = ob_get_clean();
			//\Drupal::logger('parfum')->notice('Ajouter au panier500:'.$dumpy);
			
		$session->remove('my_http_referer');
	}*/
 
}

function _notification_mail ($source, $cc=null, $destination, $sujet, $message_html,$path=null,$filename=null) {

	//define the receiver of the email 
	//define the subject of the email 
	
	//create a boundary string. It must be unique 
	//so we use the MD5 algorithm to generate a random hash 
	$random_hash = md5(date('r', time())); 
	//define the headers we want passed. Note that they are separated with \r\n 
	$headers = "From: $source\r\nReply-To: $source"; 
	
		if (isset ($cc)){
			$headers .= "\r\nCc: $cc";
		}
	
		
	//add boundary string and mime type specification 
	$headers .= "\r\nContent-Type: multipart/mixed; boundary=\"PHP-mixed-$random_hash\""; 
	//read the atachment file contents into a string,
	//encode it with MIME base64,
	//and split it into smaller chunks
	
	$attachment = chunk_split(base64_encode(file_get_contents($path.$filename))); 
	//define the body of the message. 
	
	
	$message = "\r\n\r\n--PHP-mixed-$random_hash";
	$message .= "\r\nContent-Type: multipart/alternative; boundary=\"PHP-alt-$random_hash\"";
	
	
	$message .= "\r\n\r\n--PHP-alt-$random_hash";
	$message .= "\r\nContent-Type: text/plain; charset=\"iso-8859-1\"";
	$message .= "\r\nContent-Transfer-Encoding: base64\r\n";
	
	
	$message .= chunk_split( base64_encode( strip_tags($message_html) ) );   
	
	$message .= "\r\n\r\n--PHP-alt-$random_hash";  
	$message .= "\r\nContent-Type: text/html; charset=\"iso-8859-1\"";
	$message .= "\r\nContent-Transfer-Encoding: base64\r\n";
	
	
	
	$message .= chunk_split( base64_encode( $message_html ) );
	
	$message .= "\r\n\r\n--PHP-alt-$random_hash--";
	
	$message .= "\r\n\r\n--PHP-mixed-$random_hash\r\n";  
	$message .=	"Content-Type: application/pdf; name=\"$filename\"\r\n";
	$message .=	"Content-Transfer-Encoding: base64\r\n";
	$message .=	"Content-Disposition: attachment  .\r\n";
	$message .=	$attachment;
	
	$message .= "\r\n\r\n--PHP-mixed-$random_hash--\r\n";
	
	
	
	//var_dump ($message);
	
	//send the email 
	$mail_sent = @mail( $destination, $sujet, $message, $headers ); 
	//if the message is sent successfully print "Mail sent". Otherwise print "Mail failed" 
	echo $mail_sent ? "Mail sent" : "Mail failed"; 
	
	
}

function velo_page_attachments (&$attachments){
	//$attachments['#attached']['library'][] = 'js/example.js';
	//$attachments['#attached']['library'][] = 'css/custom-freelancemodule.css';
	$current_path = \Drupal::service('path.current')->getPath();
	if ($current_path=="/velo/parcours"){
		$attachments['#attached']['library'][] = 'velo/velo';
		$attachments['#attached']['library'][] = 'velo/veloremote';		
		//$attachments['#attached']['html_head'][] = [
		//	// The data.
		//	[
		//		'#type' => 'html_tag',
		//		'#tag' => 'script',
		//		'#src' => 'http://www.openlayers.org/api/OpenLayers.js'
		//	],
		//	'openlayer',		
		//];
		
  
	}
	
	
	
	
	
	
	//if ($current_path == "velo/dbb_debug"){
	//	
	//}
}

function velo_mail_alter(&$message){

	if (isset($message['id']) && $message['id'] == 'commerce_order_receipt') {
		
		$message['send'] = FALSE;
		$source = 'contact@djerbabybike.com';
		$copie =  'contact@djerbabybike.com';

		
		//Récupération du numéro de la commande
		$order = $message['params']['order'];
		
		//Récupérer l'adresse mail du Client
		$destination = $order->getEmail();
		
		//Préparation de la commande
		$pdf_order = array();
		$pdf_order ['uid']= $order->getOrderNumber();
		$pdf_order ['id']= date('Ymd').'-'.$pdf_order ['uid'];
		$pdf_order ['file_name'] = $pdf_order ['id'].'.pdf';
		$pdf_order ['order_time']= date('d-m-Y');
		$pdf_order ['nature']= 'Commande Client';
		$pdf_order ['subdirectory']= 'commande';		
		
		//Titre du mail
		$titre_mail = 'Confirmation de Commande Djerba by Bike '.$pdf_order ['id'];
		
		//Récupération du numéro de la commande
		$order_id = $order->getOrderNumber();
		$order = \Drupal\commerce_order\Entity\Order::load($order_id);
		
		//Adresse
		$address = $order->getBillingProfile()->get('address')->getValue();
		$address = $address[0];
		
		$cedex= !empty($address["sorting_code"])?" Cedex ".$address["sorting_code"]:"";
		$Name = isset($address["family_name"])?$address["family_name"]:"";
		$SecondName = isset($address["given_name"])?$address["given_name"]:"";
		$Street1 = isset($address["address_line1"])?$address["address_line1"]:"";
		$Street2 = isset($address["address_line2"])?$address["address_line2"]:"";
		$City = isset($address["locality"])?$address["locality"]:"";
		$PostalCode = isset($address["postal_code"])?$address["postal_code"].' '.$City.' '.$cedex:"";
		
		
		//Telephone
		$telephone = $order->get('field_telephone')->getValue();
		$telephone = $telephone[0]['value'];
		
		//Dates de réservation		
		$field_check_in = $order->get('field_check_in')->getValue();
		$pdf_order ['field_check_in'] = $field_check_in[0]['value'];		

		$field_check_out = $order->get('field_check_out')->getValue();
		$pdf_order ['field_check_out'] = $field_check_out[0]['value'];
		
		//pdf_order
		$pdf_order ['adresse_client'] = array ($Street1, $Street2, $PostalCode);
		$pdf_order ['nom_client']= $SecondName.' '.$Name;
		$pdf_order ['telephone']= $telephone;
		//$pdf_order ['message']= "Nous procèderons à l'envoi du colis dès la réception de votre virement sur notre compte. Vous pouvez consulter nos conditions générales de vente sur cette adresse http://parfumstreet.fr/cgv Pour toute demande ou réclamation, nous sommes à votre disposition au 06 17 87 76 80 ou par e-mail contact@parfumstreet.fr";
		
		$pdf_order ['message']= "
<br><b><u>Coordonnées Bancaires</u>:</b>                                      <b><u>Statut de Paiement</u>:</b> Réservation non Réglée.
<br><b>  Titulaire:</b> Société Djerba By Bike
<br><b>  RIB:</b> 12 345 6789012345678 90
<br><b>  Agence:</b> Tijari Banque Midoun Djerba
<br><br><b><u>Important</u>:</b><br>".
" - Location enregistrée du <b>".$pdf_order ['field_check_in']." à 08h00 au ".$pdf_order ['field_check_out']." à 17h00</b>.<br>".
" - Avant le règlement, la réservation reste valide <b>1 jour</b> ouvrable.<br>".
" - Pour confirmer la réservation, veuillez nous envoyer <b>le justificatif</b> de paiement à <b>facturation@djerbabybike.com</b> .<br>".
" - Vous pouvez consulter nos conditions générales sur cette adresse <b>http://djerbabybike.com/cgv</b> .".
"<br><br>Pour toute demande ou réclamation, nous sommes à votre disposition au <b>+216 29 19 29 54</b> ou par email <b>contact@djerbabybike.com</b> . ";
		

		
		
		$mytBillingProfile = $order->getBillingProfile();
		//$customer_name = $order->getBillingProfile()->get('family_name')->getValue();
		//$customer_email = $order->getBillingProfile()->get('email')->getValue();
		$customer_email =  $order->getEmail();
		//$my_address = $mytBillingProfile->get('address');
		$family_name = $mytBillingProfile->get('address')->getValue()[0]["family_name"];
		
		$customer_user_name = $family_name."_".$order_id;
		$customer_user_pass = $family_name."_".$order_id;
		
		$texte_html= '<p>Madame/Monsieur,</p>
<p>Nous vous confirmons que votre r&eacute;servation a bien &eacute;t&eacute; enregistr&eacute;e et nous remercions pour votre confirance.</p>
<p>Nous vous invitons de confirmer votre r&eacute;servation en r&egrave;glant le montant mentionn&eacute; dans le bon de commande en attachement et de nous envoyer le justificatif de paiement avant deux jours ouvrable de la date de paiement.</p>
<p>&nbsp;</p>
<p>Une fois votre r&eacute;servation est lanc&eacute;e, vous pouvez suivre en ligne votre parcours en mode GPS depuis votre compte Djberba By Bike:</p>
<p><strong>Lien d\'acc&egrave;s</strong>: <a href="https://dev.djerbabybike.com/user/">https://dev.djerbabybike.com/user/</a> <br /><strong> Login</strong>: '.$customer_user_name.'<br /><strong> Mot de Passe</strong>: '.$customer_user_pass.'</p>
<p><br /> &nbsp;</p>
<p>Toute l\'&eacute;quipe <span style="color: #2196F3;"><strong>Djerba by Bike</strong></span> vous remercie pour votre confiance et reste disponible pour toute demande ou question</p>
<p><em>Bien Cordialement,</em><br /><em>M. Khalfallah</em><br /><br /><em>Djerba By Bike - General Manager</em><br /><em>+216 29 19 29 54</em></p>';

		$aux = $mytBillingProfile->get('address')->getValue()[0]["country_code"];
		if (isset ($aux)){
			$country_list = [
			"TN" => "Tunisia",
			"AF" => "Afghanistan",
			"AX" => "Åland Islands",
			"AL" => "Albania",
			"DZ" => "Algeria",
			"AS" => "American Samoa",
			"AD" => "Andorra",
			"AO" => "Angola",
			"AI" => "Anguilla",
			"AQ" => "Antarctica",
			"AG" => "Antigua and Barbuda",
			"AR" => "Argentina",
			"AM" => "Armenia",
			"AW" => "Aruba",
			"AU" => "Australia",
			"AT" => "Austria",
			"AZ" => "Azerbaijan",
			"BS" => "Bahamas",
			"BH" => "Bahrain",
			"BD" => "Bangladesh",
			"BB" => "Barbados",
			"BY" => "Belarus",
			"BE" => "Belgium",
			"BZ" => "Belize",
			"BJ" => "Benin",
			"BM" => "Bermuda",
			"BT" => "Bhutan",
			"BO" => "Bolivia, Plurinational State of",
			"BQ" => "Bonaire, Sint Eustatius and Saba",
			"BA" => "Bosnia and Herzegovina",
			"BW" => "Botswana",
			"BV" => "Bouvet Island",
			"BR" => "Brazil",
			"IO" => "British Indian Ocean Territory",
			"BN" => "Brunei Darussalam",
			"BG" => "Bulgaria",
			"BF" => "Burkina Faso",
			"BI" => "Burundi",
			"KH" => "Cambodia",
			"CM" => "Cameroon",
			"CA" => "Canada",
			"CV" => "Cape Verde",
			"KY" => "Cayman Islands",
			"CF" => "Central African Republic",
			"TD" => "Chad",
			"CL" => "Chile",
			"CN" => "China",
			"CX" => "Christmas Island",
			"CC" => "Cocos (Keeling) Islands",
			"CO" => "Colombia",
			"KM" => "Comoros",
			"CG" => "Congo",
			"CD" => "Congo, the Democratic Republic of the",
			"CK" => "Cook Islands",
			"CR" => "Costa Rica",
			"CI" => "Côte d'Ivoire",
			"HR" => "Croatia",
			"CU" => "Cuba",
			"CW" => "Curaçao",
			"CY" => "Cyprus",
			"CZ" => "Czech Republic",
			"DK" => "Denmark",
			"DJ" => "Djibouti",
			"DM" => "Dominica",
			"DO" => "Dominican Republic",
			"EC" => "Ecuador",
			"EG" => "Egypt",
			"SV" => "El Salvador",
			"GQ" => "Equatorial Guinea",
			"ER" => "Eritrea",
			"EE" => "Estonia",
			"ET" => "Ethiopia",
			"FK" => "Falkland Islands (Malvinas)",
			"FO" => "Faroe Islands",
			"FJ" => "Fiji",
			"FI" => "Finland",
			"FR" => "France",
			"GF" => "French Guiana",
			"PF" => "French Polynesia",
			"TF" => "French Southern Territories",
			"GA" => "Gabon",
			"GM" => "Gambia",
			"GE" => "Georgia",
			"DE" => "Germany",
			"GH" => "Ghana",
			"GI" => "Gibraltar",
			"GR" => "Greece",
			"GL" => "Greenland",
			"GD" => "Grenada",
			"GP" => "Guadeloupe",
			"GU" => "Guam",
			"GT" => "Guatemala",
			"GG" => "Guernsey",
			"GN" => "Guinea",
			"GW" => "Guinea-Bissau",
			"GY" => "Guyana",
			"HT" => "Haiti",
			"HM" => "Heard Island and McDonald Islands",
			"VA" => "Holy See (Vatican City State)",
			"HN" => "Honduras",
			"HK" => "Hong Kong",
			"HU" => "Hungary",
			"IS" => "Iceland",
			"IN" => "India",
			"ID" => "Indonesia",
			"IR" => "Iran, Islamic Republic of",
			"IQ" => "Iraq",
			"IE" => "Ireland",
			"IM" => "Isle of Man",
			"IL" => "Israel",
			"IT" => "Italy",
			"JM" => "Jamaica",
			"JP" => "Japan",
			"JE" => "Jersey",
			"JO" => "Jordan",
			"KZ" => "Kazakhstan",
			"KE" => "Kenya",
			"KI" => "Kiribati",
			"KP" => "Korea, Democratic People's Republic of",
			"KR" => "Korea, Republic of",
			"KW" => "Kuwait",
			"KG" => "Kyrgyzstan",
			"LA" => "Lao People's Democratic Republic",
			"LV" => "Latvia",
			"LB" => "Lebanon",
			"LS" => "Lesotho",
			"LR" => "Liberia",
			"LY" => "Libya",
			"LI" => "Liechtenstein",
			"LT" => "Lithuania",
			"LU" => "Luxembourg",
			"MO" => "Macao",
			"MK" => "Macedonia, the former Yugoslav Republic of",
			"MG" => "Madagascar",
			"MW" => "Malawi",
			"MY" => "Malaysia",
			"MV" => "Maldives",
			"ML" => "Mali",
			"MT" => "Malta",
			"MH" => "Marshall Islands",
			"MQ" => "Martinique",
			"MR" => "Mauritania",
			"MU" => "Mauritius",
			"YT" => "Mayotte",
			"MX" => "Mexico",
			"FM" => "Micronesia, Federated States of",
			"MD" => "Moldova, Republic of",
			"MC" => "Monaco",
			"MN" => "Mongolia",
			"ME" => "Montenegro",
			"MS" => "Montserrat",
			"MA" => "Morocco",
			"MZ" => "Mozambique",
			"MM" => "Myanmar",
			"NA" => "Namibia",
			"NR" => "Nauru",
			"NP" => "Nepal",
			"NL" => "Netherlands",
			"NC" => "New Caledonia",
			"NZ" => "New Zealand",
			"NI" => "Nicaragua",
			"NE" => "Niger",
			"NG" => "Nigeria",
			"NU" => "Niue",
			"NF" => "Norfolk Island",
			"MP" => "Northern Mariana Islands",
			"NO" => "Norway",
			"OM" => "Oman",
			"PK" => "Pakistan",
			"PW" => "Palau",
			"PS" => "Palestinian Territory, Occupied",
			"PA" => "Panama",
			"PG" => "Papua New Guinea",
			"PY" => "Paraguay",
			"PE" => "Peru",
			"PH" => "Philippines",
			"PN" => "Pitcairn",
			"PL" => "Poland",
			"PT" => "Portugal",
			"PR" => "Puerto Rico",
			"QA" => "Qatar",
			"RE" => "Réunion",
			"RO" => "Romania",
			"RU" => "Russian Federation",
			"RW" => "Rwanda",
			"BL" => "Saint Barthélemy",
			"SH" => "Saint Helena, Ascension and Tristan da Cunha",
			"KN" => "Saint Kitts and Nevis",
			"LC" => "Saint Lucia",
			"MF" => "Saint Martin (French part)",
			"PM" => "Saint Pierre and Miquelon",
			"VC" => "Saint Vincent and the Grenadines",
			"WS" => "Samoa",
			"SM" => "San Marino",
			"ST" => "Sao Tome and Principe",
			"SA" => "Saudi Arabia",
			"SN" => "Senegal",
			"RS" => "Serbia",
			"SC" => "Seychelles",
			"SL" => "Sierra Leone",
			"SG" => "Singapore",
			"SX" => "Sint Maarten (Dutch part)",
			"SK" => "Slovakia",
			"SI" => "Slovenia",
			"SB" => "Solomon Islands",
			"SO" => "Somalia",
			"ZA" => "South Africa",
			"GS" => "South Georgia and the South Sandwich Islands",
			"SS" => "South Sudan",
			"ES" => "Spain",
			"LK" => "Sri Lanka",
			"SD" => "Sudan",
			"SR" => "Suriname",
			"SJ" => "Svalbard and Jan Mayen",
			"SZ" => "Swaziland",
			"SE" => "Sweden",
			"CH" => "Switzerland",
			"SY" => "Syrian Arab Republic",
			"TW" => "Taiwan, Province of China",
			"TJ" => "Tajikistan",
			"TZ" => "Tanzania, United Republic of",
			"TH" => "Thailand",
			"TL" => "Timor-Leste",
			"TG" => "Togo",
			"TK" => "Tokelau",
			"TO" => "Tonga",
			"TT" => "Trinidad and Tobago",
			"TR" => "Turkey",
			"TM" => "Turkmenistan",
			"TC" => "Turks and Caicos Islands",
			"TV" => "Tuvalu",
			"UG" => "Uganda",
			"UA" => "Ukraine",
			"AE" => "United Arab Emirates",
			"GB" => "United Kingdom",
			"US" => "United States",
			"UM" => "United States Minor Outlying Islands",
			"UY" => "Uruguay",
			"UZ" => "Uzbekistan",
			"VU" => "Vanuatu",
			"VE" => "Venezuela, Bolivarian Republic of",
			"VN" => "Viet Nam",
			"VG" => "Virgin Islands, British",
			"VI" => "Virgin Islands, U.S.",
			"WF" => "Wallis and Futuna",
			"EH" => "Western Sahara",
			"YE" => "Yemen",
			"ZM" => "Zambia",
			"ZW" => "Zimbabwe",
		]	
	;
			$pdf_order ['adresse_client'][count ($pdf_order ['adresse_client'])-1] .= ' - '.$country_list[$mytBillingProfile->get('address')->getValue()[0]["country_code"]];
		}
		
		//Sous total
		//$pdf_order ['Sous Total H.T'] = number_format ( $order->getSubtotalPrice()->getNumber(), 2 );			
		//$pdf_order ['TOTAL H.T'] = number_format ( $order->getTotalPrice()->getNumber(), 2 );
		$pdf_order ['Net TTC'] = number_format ( $order->getTotalPrice()->getNumber(), 2 );	
		
		//Récupérer les items
		$order_items = $order->getItems();
		$lines = array();
		//Récupérer la liste des articles
		ob_start();
		foreach ($order_items as $key => $value){
			$variation = $value->getPurchasedEntity();
			$quantity  =  number_format ( $value->getQuantity(), 0 );					
			
			//$unit_price = number_format ( $variation->getPrice()->getNumber(), 2 );
			//$currency_code = $variation->getPrice()->getCurrencyCode() ;
			$unit_price = number_format ( $value->getUnitPrice()->getNumber(), 2 );
			$currency_code = $value->getUnitPrice()->getCurrencyCode() ;
			
			$pdf_order['currency'] = $currency_code;
			var_dump ("currency_code");
			var_dump ($currency_code);
			//$test2 = $variation->getPrice()->getValue();
			
			$my_title = $variation->getTitle();
			$sku = $variation->getSku();
			$total_item_price = $value->getTotalPrice();
			$total_item_price1 = $total_item_price;
			$total_item_price = preg_replace('/ '.$currency_code.'/', '', $total_item_price);
			$total_item_price2 = $total_item_price;
			$total_item_price = number_format ( $total_item_price, 2 );
			$lines [] = $sku.'|'.$my_title.'|'.$unit_price.'|'.$quantity.'|'.$total_item_price;
		}
		
		$pdf_order['lines'] = $lines;
		
		
		
		//Creating user account
		$user_infos = array(
			'name' => $customer_user_name,
			'mail' => $customer_email,
			'pass' => $customer_user_pass,
			'status' => 1,
		);
		$account = entity_create('user', $user_infos);
		$account->save();
		//#Creating user account

		$order->set("uid", $account->id());
		$order->save();				
		
		
		var_dump("pdf_order");
		var_dump($pdf_order);
        //
		var_dump("total_item_price1");
		var_dump($total_item_price1);
		
		var_dump("total_item_price2");
		var_dump($total_item_price2);		
		$velo_controller = new VeloController ;
		$velo_controller->_generation_pdf($pdf_order);
		_notification_mail (
			$source, 
			$copie, 
			$destination, 
			$titre_mail, 
			$texte_html,
			'sites/default/files/private/commande/',$pdf_order ['file_name']
		)	;


		//var_dump("account->id");
		//var_dump($account->id());
		
		//var_dump("family_name");
		//var_dump($family_name);
		
		
		$dumpy = ob_get_clean();
		\Drupal::logger('velo')->notice('parfum_mail_alter: '.$dumpy);		
	}
}